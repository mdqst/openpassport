// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {Verifier_prove_rsa_65537_sha256} from "../src/verifiers/Verifier_prove_rsa_65537_sha256.sol";

contract Verifier_prove_rsa_65537_sha256_Test is Test {
    Verifier_prove_rsa_65537_sha256 public verifier;

    uint[2] _pA = [
        6068383005758146690234477927169132848573226018258265212592238548975564176349,
        624307310898004143210983455996608695057628825849801929507446531787174445950
    ];
    uint[2][2] _pB = [
        [
            11304676281310164669472986506356062519946639914352470309369796132374729721244,
            14152186525233691302739012420981635249125111634413677411980897568332984121698
        ],
        [
            20462591528979960915179998569195637144560110557725890217934245543174368686660,
            16377906384351322352886064064372493174333886891380950132254209516487412921139
        ]
    ];
    uint[2] _pC = [
        17933422497120813049114937360842951349927492974864703883200496071341260066795,
        12521208776190423888209901870259617471919659252039852746463843287199562332845
    ];
    uint[51] _pubSignals = [
        15040277207352853479081107072157072201520622851287136964426742619653531571447,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        115336977272103371767631329941912107655281185957201566335956547349447657025,
        114533598885962354186222048854083783574107256784647251025807174,
        0,
        0,
        84977272126272612800606599024080927201908174808146169331248080469508074731,
        2,
        4,
        1,
        0,
        0,
        5,
        143098242404177361603877621312831893704,
        1049
    ];

    function setUp() public {
        verifier = new Verifier_prove_rsa_65537_sha256();
    }

    function test_verify() public {
        bool res = verifier.verifyProof(_pA, _pB, _pC, _pubSignals);
        assertTrue(res == true, "fail!");
    }

}
